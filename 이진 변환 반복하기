# def lalo(n):
#    if n == 1:
#        return 1
#    else:
#        return lalo(n-1) * 2 + 1
# print(lalo(4)) #출력값 : 15



# fibo = []
# n = int(input())
# for i in range(n+1):
#     fibo.append(0)
# print(fibo)
# #F(n) = F(n-1) + F(n-2)
#
# fibo[1] = 1
# print(fibo)
# for i in range(2, n+1):
#     fibo[i] = fibo[i-1] + fibo[i-2]
#     print(f"i = {i},fibo = {fibo}")



# #재귀으이 귀재
# def recursion(s, l, r,cnt):
#     cnt += 1
#     if l >= r: return 1, cnt
#     elif s[l] != s[r]: return 0, cnt
#     else: return recursion(s, l+1, r-1,cnt+1)
#
# def isPalindrome(s):
#     return recursion(s, 0, len(s)-1, 1)
# T = int(input())
# for _ in range(T):
#     s = input()
#     answer = isPalindrome(s)
#     print(answer[0],answer[1])







#이진 변환 반복하기
# def solution(s):
#     return recursions(s)
# def recursions(s):
#     if s == '1':
#         return [#recursion함수의 호출횟수, '0'을 제거한 횟수]
#     return #재귀
